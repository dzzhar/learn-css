.flex {
  /* untuk mengatur sifat elemen dengan value block dan inline */
  display: flex;

  /* 
  row: disusun horizontal dari kiri ke kanan
  row-reverse: disusun secara horizontal, dari kanan ke kiri
  column: disusun vertikal dari atas ke bawah
  column-reverse: disusun secara vertikal dari bawah ke atas
   */
  flex-direction: row;

  /* 
  nowrap: flex items akan ditempatkan dalam satu baris walau jumlahnya banyak (default)
  wrap: flex items akan diletakan ke baris baru sehingga menjadi multiple lines
  wrap-reverse: flex items ditempatkan dengan menambahkan baris sebelumnya
  */
  flex-wrap: wrap;

  /* 
  flex-start: peletakan child element akan dimulai dari main-start
  flex-end: peletakan child element dimulai dari main-end
  center: child element akan diletakkan di tengah parent child
  space-between: child element akan tersusun secara merata, elemen pertama berada di tepi main-start dan elemen kedua berada di tepi main-end. Jika child element lebih dari dua, elemen lainnya akan didistribusikan berada di tengah dengan jarak yang sama
  space-around: setiap child element akan memiliki panjang celah yang sama pada sisi horizontal
  space-evenly: setiap child element akan memiliki jarak yang setara, termasuk jarak ke tepi main-start dan main-end
  */
  /* justify-content: space-evenly; */

  /* 
  stretch: melebar hingga memenuhi container dalam cross axis. Setiap child element akan memiliki nilai height yang sama, meskipun isi konten berbeda
  flex-start: setiap child element akan memiliki ukuran height sesuai dengan isi konten serta seluruhnya akan berada di tepi cross-start
  flex-end: setiap child element akan memiliki ukuran height sesuai dengan isi konten serta seluruhnya akan berada di tepi cross-end
  center: setiap child element memiliki ukuran height sesuai dengan isi konten dan secara vertikal posisi elemen berada di tengah
  baseline: nilai pada asalnya akan menyerupai flex-start. Namun, jika konten pertama pada masing-masing child element memiliki ukuran height yang berbeda, child element lainnya akan menyesuaikan posisinya secara cross axis dari cross-start
 */
  /* align-items: center; */

  /*
  normal (default): Jika kita tidak menerapkan value pada align content, flex items akan diposisikan secara default
  flex-start: flex items ditata pada permulaan flex container
  flex-end: flex items ditata pada akhir flex container
  center: flex items diposisikan di tengah flex container
  space-between: flex items akan disebar secara merata, item pertama akan diposisikan pada cross-start dan item terakhir akan diposisikan pada cross-end
  space-around: flex items akan disebar secara merata dengan jarak celah yang sama juga
  space-evenly: flex items akan disebar secara merata dengan jarak yang merata juga 
  */
  align-content: center;
}

.box {
  width: 10rem;
  height: 10rem;
  margin: 0.5rem;
}

.box6 {
  order: -2;
  /* jika kita memasukan nilai 2 maka nilainya akan 2x lebih besar */
  flex-grow: 2;
  background-color: beige;
}

.box5 {
  order: -1;
  background-color: saddlebrown;
}

.box4 {
  order: 0;
  background-color: salmon;
}
.box3 {
  order: 1;
  background-color: slateblue;
}
.box2 {
  order: 2;
  background-color: seagreen;
}
.box1 {
  order: 3;
  background-color: steelblue;
}
